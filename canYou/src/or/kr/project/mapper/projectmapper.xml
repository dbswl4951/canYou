<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project">
	<!-- 모든 카테고리 목록 불러옴 -->
	<select id="casel" resultType="cvo">
		select * from category
	</select>

	<!-- 둘러보기 -->
	<select id="lookaround" resultType="cvo">
		select categoryname
		from
		category
		order by categoryno
	</select>

	<!-- 회원 아이디로 회원 번호, 이름을 가져옴 -->
	<select id="memname" parameterType="String" resultType="mvo">
		select
		memberNo, memberName from member where memberId=#{memberId}
	</select>

	<!-- 회원 번호로 회원 이름을 가져옴 -->
	<select id="memname2" parameterType="int" resultType="mvo">
		select
		memberId, memberName from member where memberNo=#{memberNo}
	</select>

	<!-- 프로젝트 업로드 -->
	<insert id="proin" parameterType="projvo">
		insert into project
		values(project_seq.nextVal, #{memberNo},
		#{projectName},
		#{projectCost}, sysdate, TO_DATE(#{projectEndDate},'yyyy-mm-dd'),
		0, #{projectMainImage}, #{projectStory},
		'Z', 2, 0, #{categoryNo})
		<selectKey keyProperty="projectNo" resultType="int"
			order="AFTER">
			SELECT project_seq.CURRVAL FROM dual
		</selectKey>
	</insert>

	<!-- 상품 추가 -->
	<insert id="prodin" parameterType="prodvo">
		insert into product
		values(product_seq.nextVal, #{productName}, #{productCnt},
		#{productInfo}, #{productCost}, #{projectNo})
	</insert>

	<!-- 프로젝트의 상품 목록 가져오기 -->
	<select id="prodsel" parameterType="String" resultType="prodvo">
		select *
		from product where projectNo=#{projectNo}
	</select>

	<!-- 마이페이지 후원 목록 리스트 -->
	<select id="mydonate" parameterType="int" resultType="HashMap">
		select
		d.donateNo, p.projectName, to_char(d.donateDay, 'yyyy.MM.dd')
		donateDay, d.donateMoney from projectdonate d, project p
		where
		d.projectNo=p.projectNo and d.memberNo=#{memberNo}
	</select>

	<!-- 마이페이지 내가 만든 프로젝트 리스트 -->
	<select id="myProjectlist" parameterType="int"
		resultType="projvo">
		select projectNo, memberNo, projectName, projectCost,
		projectStartDate,
		projectEndDate, projectFundCnt, projectMainImage,projectStory,
		projectStep, projectStatus, categoryNo, projectCurCost
		from project
		where memberNo=#{memberNo}
	</select>

	<!-- 개인정보 수정 -->
	<update id="editinfo" parameterType="mvo">
		update member
		<trim prefix="SET" suffixOverrides=",">
			<if test="memberPwd != null">memberPwd=#{memberPwd},</if>
			<if test="memberName != null">memberName=#{memberName},</if>
			<if test="memberAddr != null">memberAddr=#{memberAddr},</if>
			<if test="memberPhone != null">memberPhone=#{memberPhone},</if>
			<if test="memberEmail != null">memberEmail=#{memberEmail},</if>
			<if test="memberAge != null">memberAge=#{memberAge},</if>
			<if test="memberAccount != null">memberAccount=#{memberAccount},</if>
			<if test="memberImage != null">memberImage=#{memberImage},</if>
		</trim>
		where memberNo=#{memberNo}
	</update>

	<!-- 상품 가격 가져오기 -->
	<select id="prodcost" parameterType="int" resultType="int">
		select
		productCost from product where productNo=#{productNo}
	</select>

	<!-- 후원 추가 1 (행 추가) -->
	<insert id="donate" parameterType="dvo">
		<choose>
			<when test="productNo!=0">
				insert into projectdonate values(
				donate_seq.nextVal,#{memberNo},#{projectNo},#{productNo},#{donateMoney},'선결제',
				sysdate
				)
			</when>
			<otherwise>
				insert into projectdonate values(
				donate_seq.nextVal,#{memberNo},#{projectNo},null,#{donateMoney},'선결제',
				sysdate
				)
			</otherwise>
		</choose>
	</insert>

	<!-- 후원 추가 1 (상품 빼기) -->
	<update id="prodput" parameterType="dvo">
		update product
		set productCnt
		= productCnt-1
		where productNo=#{productNo}
	</update>

	<!-- 후원 추가 1 (돈 빼기) -->
	<update id="donateMoney" parameterType="HashMap">
		update member
		set
		memberCash = memberCash - #{donateMoney}
		where memberNo=#{memberNo}
	</update>

	<!-- 후원 추가 (후원자 수 증가) -->
	<update id="projectFundCnt" parameterType="dvo">
		update project
		set
		projectFundCnt=projectFundCnt+1
		where projectNo=#{projectNo}
	</update>

	<!-- 후원 추가(모인 금액 업데이트) -->
	<update id="projectCurCost" parameterType="dvo">
		update project set
		projectCurCost=projectCurCost+#{donateMoney}
		where projectNo=#{projectNo}
	</update>

	<!-- 후원 취소2 (행 삭제) : 세션에서 가져온 회원 번호와 후원 번호가 일치해야 삭제가 됨 -->
	<delete id="cancle" parameterType="dvo">
		delete
		from projectDonate
		where
		memberNo=#{memberNo} and donateNo=#{donateNo}
	</delete>

	<!-- 후원 취소 2 (돈 반환) -->
	<update id="returnMoney" parameterType="HashMap">
		update member
		set
		memberCash = memberCash + #{donateMoney}
		where memberNo=#{memberNo}
	</update>

	<!-- 후원 취소를 하기 위해 취소할 후원 프로젝트의 돈을 가져오는 sql 구문 -->
	<select id="mydonatelist" parameterType="dvo" resultType="int">
		select
		donateMoney
		from projectDonate
		where memberNo=#{memberNo} and
		donateNo=#{donateNo}
	</select>
	
	<!-- 후원 취소3(후원자수 감소) -->
	<update id="returnFundCnt" parameterType="dvo">
		update project
		set
		projectFundCnt=projectFundCnt-1
		where projectNo=(select projectNo from projectdonate where donateNo=#{donateNo})
	</update>


	<!-- 리스트 현무스 -->
	<select id="list" parameterType="String" resultType="projvo">
		select
		projectNo ,memberNo
		,projectName ,projectCost
		,projectStartDate,
		projectEndDate,projectFundCnt,
		projectMainImage,projectStory,projectStep,projectStatus
		,categoryNo,
		projectCurCost from project where projectNo=#{projectNo}
	</select>

	<!-- 수정 폼 view -->
	<select id="modifyview" parameterType="String"
		resultType="projvo">
		select projectName, projectMainImage, projectStory from
		project where projectNo=#{projectNo}
	</select>

	<!-- 수정 -->
	<update id="modify" parameterType="projvo" timeout="20">
		update
		project SET projectName = #{projectName} , projectCost =
		#{projectCost} , projectMainImage =
		#{projectMainImage} , projectStory
		= #{projectStory} WHERE projectNo=#{projectNo}
	</update>

	<!-- 댓글 등록하기 -->
	<insert id="replyInsert" parameterType="replyvo">
		insert into reply values(
		reply_seq.nextVal,#{replyContent},sysdate,
		#{projectNo},#{memberNo}
		)
	</insert>
	<!-- 댓글 리스트 -->
	<select id="replyList" parameterType="String"
		resultType="replyvo">
		select replyContent,replyDate, memberNo
		from reply
		where
		projectNo=#{projectNo}
		order by replyDate
	</select>
</mapper>