package or.kr.project.mvc.controller;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import or.kr.project.dto.MemberVO;
import or.kr.project.dto.ProductVO;
import or.kr.project.dto.ProjectVO;
import or.kr.project.dto.ReplyVO;
import or.kr.project.mvc.dao.projectDaoImple;

@Controller
// Detail.jsp를 포함하는 각각 jsp를 컨트롤하기 위한 Controller
public class DetailController {
	@Autowired
	projectDaoImple dao;
	
	// 스토리와 관련된 부분이 detail.jsp와 같이 나오는 메소드
	@GetMapping("/story")
	public String listView(Model m, String projectNo, HttpServletRequest req) {
		// project 관련한 정보 빼오기
		ProjectVO list = dao.projectlist(projectNo);
		String c=dao.caselone(list.getCategoryNo());
		String sc=dao.subcaselone(list.getSubCategoryNo());
		m.addAttribute("list",list);
		m.addAttribute("c", c);
		m.addAttribute("sc", sc);
		// project와 연결된 member 정보 가져오기
		MemberVO mem=dao.memname2(list.getMemberNo());
		m.addAttribute("member", mem);
		
		return "storypage";
	}
	
	@RequestMapping(value="/community")
	public String getReply(Model m, HttpServletRequest req, String projectNo) {
		// project 관련한 정보 빼오기
		System.out.println("num : " + projectNo);
		ProjectVO list = dao.projectlist(projectNo);
		String c = dao.caselone(list.getCategoryNo());
		String sc = dao.subcaselone(list.getSubCategoryNo());
		m.addAttribute("list", list);
		m.addAttribute("c", c);
		m.addAttribute("sc", sc);
		// project와 연결된 member 정보 가져오기
		MemberVO mem = dao.memname2(list.getMemberNo());
		m.addAttribute("member", mem);
		
		//댓글 정보 가져오기
		List<ReplyVO> replylist =dao.replyList(projectNo);
		//List<ReplyVO> replylist = dao.replyList(projectNo);
		m.addAttribute("replylist", replylist);
		System.out.println("replylist 크기 : "+ replylist.size());
				
		HttpSession s=req.getSession();
		s.setAttribute("projnum", projectNo);		// 프로젝트 세션을 추가
		
		return "communitypage";
	}
	
	@RequestMapping(value="/productDetail")
	public String getProductDetail(Model m, HttpServletRequest req, String projectNo) {
		// project 관련한 정보 빼오기
		ProjectVO list = dao.projectlist(projectNo);
		String c = dao.caselone(list.getCategoryNo());
		String sc = dao.subcaselone(list.getSubCategoryNo());
		m.addAttribute("list", list);
		m.addAttribute("c", c);
		m.addAttribute("sc", sc);
		// project와 연결된 member 정보 가져오기
		MemberVO mem = dao.memname2(list.getMemberNo());
		m.addAttribute("member", mem);
		
		// project와 연결된 product 가져오기
		List<ProductVO> list2=dao.prodsel(projectNo);
		m.addAttribute("prodlist", list2);
		
		return "productdetailpage";
	}
}
